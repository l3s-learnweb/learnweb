name: Deploy

on:
  workflow_run:
    workflows: [ CI ]
    types: [ completed ]
    branches: [ main ]

jobs:
  deploy-dev:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: Dump workflow_run context
        env:
          GITHUB_WF_RUN: ${{ toJSON(github.event.workflow_run) }}
        run: echo "$GITHUB_WF_RUN"

      - id: get_version
        name: Get version
        uses: astappiev/get-version-from-tag@v1
        with:
          format: 'tomcat'

      - name: Display version
        run: |
          VERSION=$(echo "${{ steps.get_version.outputs.version }}")
          echo $VERSION

      - uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USERNAME }}
          key: ${{ secrets.DEPLOY_PRIVATE_KEY }}

          proxy_host: ${{ secrets.DEPLOY_JUMP_HOST }}
          proxy_username: ${{ secrets.DEPLOY_JUMP_USERNAME }}
          proxy_key: ${{ secrets.DEPLOY_PRIVATE_KEY }}

          script: |
            cd ~/stacks/learnweb_dev

            # Ensure webapps directory exists
            mkdir -p webapps

            # Get artifact ID
            ARTIFACT_ID=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/vnd.github+json" \
              "${{ github.event.workflow_run.artifacts_url }}" | jq -r '.artifacts[] | select(.name=="learnweb-war") | .id')

            # Create temp directory for extraction
            TEMP_DIR=$(mktemp -d)

            # Download and extract in two steps
            curl -L -s -H "Accept: application/vnd.github+json" -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/actions/artifacts/${ARTIFACT_ID}/zip" -o "${TEMP_DIR}/artifact.zip"

            unzip -q "${TEMP_DIR}/artifact.zip" -d "${TEMP_DIR}"

            # Move to final location with correct name
            mv "${TEMP_DIR}/Learnweb.war" "webapps/ROOT##${{ steps.get_version.outputs.version }}.war"

            # Clean up
            rm -rf "${TEMP_DIR}"

  deploy-prod:
    runs-on: ubuntu-latest
    if: startsWith(github.event.workflow_run.ref, 'refs/tags/v')
    needs: [ deploy-dev ]
    steps:
      - id: get_version
        name: Get version
        uses: astappiev/get-version-from-tag@v1
        with:
          format: 'tomcat'

      - name: Display version
        run: |
          VERSION=$(echo "${{ steps.get_version.outputs.version }}")
          echo $VERSION

#      - uses: actions/download-artifact@v4
#        with:
#          name: learnweb-war
#
#      - name: Rename artifact
#        run: mv Learnweb.war ROOT##${{ needs.build.outputs.version }}.war
#
#      - name: Install SSH keys
#        uses: shimataro/ssh-key-action@v2
#        with:
#          name: id_ed25519
#          key: ${{ secrets.DEPLOY_PRIVATE_KEY }}
#          known_hosts: ${{ secrets.DEPLOY_KNOWN_HOSTS }}
#          config: |
#            Host bastion
#              HostName ${{ secrets.DEPLOY_JUMP_HOST }}
#              User ${{ secrets.DEPLOY_JUMP_USERNAME }}
#
#            Host learnweb
#              HostName ${{ secrets.DEPLOY_HOST }}
#              User ${{ secrets.DEPLOY_USERNAME }}
#              ProxyJump bastion
#
#      - name: Check if artifact exists
#        run: "! ssh learnweb test -f '${{ secrets.DEPLOY_PATH }}/ROOT##${{ needs.build.outputs.version }}.war' || false"
#
#      - name: Copy artifact to server
#        run: rsync -avzh --ignore-existing ROOT##*.war learnweb:${{ secrets.DEPLOY_PATH }}/
