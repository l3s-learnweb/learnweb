<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>de.l3s</groupId>
    <artifactId>learnweb</artifactId>
    <!-- Because Tomcat treats version as String, we need to use zero padding to make sure v10 is newer than v9 -->
    <version>3.11.10</version>
    <packaging>war</packaging>

    <name>Learnweb</name>
    <description>Learnweb is a collaborative search and sharing system.</description>

    <properties>
        <javax.faces.project_stage>Development</javax.faces.project_stage>

        <maven.compiler.release>11</maven.compiler.release>
        <maven.dependency.myfaces.version>2.3-next-M4</maven.dependency.myfaces.version>
        <maven.dependency.imageio.version>3.6.4</maven.dependency.imageio.version>
        <maven.dependency.jdbi3.version>3.20.0</maven.dependency.jdbi3.version>
        <maven.dependency.log4j.version>2.14.1</maven.dependency.log4j.version>
        <maven.dependency.junit.version>5.7.1</maven.dependency.junit.version>
        <maven.dependency.mockito.version>3.9.0</maven.dependency.mockito.version>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.npm.install.phase>prepare-package</project.npm.install.phase>
        <project.npm.build.phase>prepare-package</project.npm.build.phase>
        <maven.assembly.mainClass>de.l3s.maintenance.resources.ReindexResources</maven.assembly.mainClass>
    </properties>

    <repositories>
        <repository>
            <id>astappiev-maven</id>
            <name>Private Maven Repository (to host our dependencies and dependencies build from sources)</name>
            <url>https://git.l3s.uni-hannover.de/astappiev/maven-repo/-/raw/master/</url>
        </repository>
    </repositories>

    <dependencies>
        <!-- Learnweb modules -->
        <dependency>
            <groupId>de.l3s.interweb</groupId>
            <artifactId>interwebj-client</artifactId>
            <version>3.5.0</version>
        </dependency>

        <!-- ################ Java EE ################ -->
        <!-- APIs provided by Tomcat -->
        <dependency>
            <groupId>jakarta.servlet</groupId>
            <artifactId>jakarta.servlet-api</artifactId>
            <version>4.0.4</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.el</groupId>
            <artifactId>jakarta.el-api</artifactId>
            <version>3.0.3</version>
            <scope>provided</scope>
        </dependency>
        <!-- JSF API & Impl -->
        <dependency>
            <groupId>org.apache.myfaces.core</groupId>
            <artifactId>myfaces-api</artifactId>
            <version>${maven.dependency.myfaces.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.myfaces.core</groupId>
            <artifactId>myfaces-impl</artifactId>
            <version>${maven.dependency.myfaces.version}</version>
        </dependency>
        <!-- CDI API & Impl for Servlet container (Tomcat) -->
        <dependency>
            <groupId>org.jboss.weld.servlet</groupId>
            <artifactId>weld-servlet-shaded</artifactId>
            <version>3.1.7.Final</version>
        </dependency>
        <!-- Validator API & Impl -->
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>6.2.0.Final</version>
        </dependency>
        <!-- Mail API & Impl -->
        <dependency>
            <groupId>com.sun.mail</groupId>
            <artifactId>jakarta.mail</artifactId>
            <version>1.6.5</version>
        </dependency>

        <!-- ################ JSF Libraries ################ -->
        <!-- JSF Tools -->
        <dependency>
            <groupId>org.omnifaces</groupId>
            <artifactId>omnifaces</artifactId>
            <version>3.11</version>
        </dependency>
        <!-- PrimeFaces -->
        <dependency>
            <groupId>org.primefaces</groupId>
            <artifactId>primefaces</artifactId>
            <version>10.0.0</version>
        </dependency>
        <!-- Optional dependency of PrimeFaces (required for DataExporter (PDF)) -->
        <dependency>
            <groupId>com.github.librepdf</groupId>
            <artifactId>openpdf</artifactId>
            <version>1.3.25</version>
        </dependency>
        <!-- Optional dependency of PrimeFaces (required for DataExporter (Excel or XML)) -->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>5.0.0</version>
        </dependency>
        <!-- poi XLSX support used for Glossary exporter -->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>5.0.0</version>
        </dependency>
        <!-- Optional dependency of PrimeFaces (required for TextEditor) -->
        <dependency>
            <groupId>com.googlecode.owasp-java-html-sanitizer</groupId>
            <artifactId>owasp-java-html-sanitizer</artifactId>
            <version>20200713.1</version>
        </dependency>

        <!-- ################ Apache commons ################ -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.12.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
            <version>4.4</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-csv</artifactId>
            <version>1.8</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.8.0</version>
        </dependency>

        <!-- ################ ImageIO (Image processing, Thumbnails) ################ -->
        <dependency>
            <groupId>com.twelvemonkeys.servlet</groupId>
            <artifactId>servlet</artifactId>
            <version>${maven.dependency.imageio.version}</version>
        </dependency>
        <dependency>
            <groupId>com.twelvemonkeys.imageio</groupId>
            <artifactId>imageio-bmp</artifactId>
            <version>${maven.dependency.imageio.version}</version>
        </dependency>
        <dependency>
            <groupId>com.twelvemonkeys.imageio</groupId>
            <artifactId>imageio-jpeg</artifactId>
            <version>${maven.dependency.imageio.version}</version>
        </dependency>
        <dependency>
            <groupId>com.twelvemonkeys.imageio</groupId>
            <artifactId>imageio-tiff</artifactId>
            <version>${maven.dependency.imageio.version}</version>
        </dependency>
        <dependency>
            <groupId>com.twelvemonkeys.imageio</groupId>
            <artifactId>imageio-hdr</artifactId>
            <version>${maven.dependency.imageio.version}</version>
        </dependency>

        <!-- ################ Core dependencies ################ -->
        <!-- Database client -->
        <dependency>
            <groupId>org.mariadb.jdbc</groupId>
            <artifactId>mariadb-java-client</artifactId>
            <version>2.7.2</version>
        </dependency>
        <!-- Connection pool -->
        <dependency>
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
            <version>4.0.3</version>
        </dependency>
        <!-- JDBC wrapper -->
        <dependency>
            <groupId>org.jdbi</groupId>
            <artifactId>jdbi3-core</artifactId>
            <version>${maven.dependency.jdbi3.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jdbi</groupId>
            <artifactId>jdbi3-sqlobject</artifactId>
            <version>${maven.dependency.jdbi3.version}</version>
        </dependency>
        <!-- Database migrations -->
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
            <version>7.8.1</version>
        </dependency>
        <!-- Solr client (the library has 10 MB of dependencies :/) -->
        <dependency>
            <groupId>org.apache.solr</groupId>
            <artifactId>solr-solrj</artifactId>
            <version>8.8.2</version>
            <exclusions>
                <!-- conflicts with poi-ooxml dependencies -->
                <exclusion>
                    <groupId>org.codehaus.woodstox</groupId>
                    <artifactId>stax2-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.codehaus.woodstox</groupId>
                    <artifactId>woodstox-core-asl</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- URL rewrite -->
        <dependency>
            <groupId>org.tuckey</groupId>
            <artifactId>urlrewritefilter</artifactId>
            <version>4.0.4</version>
        </dependency>
        <!-- Cron tasks manager -->
        <dependency>
            <groupId>it.sauronsoftware.cron4j</groupId>
            <artifactId>cron4j</artifactId>
            <version>2.2.5</version>
        </dependency>
        <!-- Logging -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-web</artifactId>
            <version>${maven.dependency.log4j.version}</version>
        </dependency>
        <!-- Binding from slf4j to log4j, required by solr client -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <version>${maven.dependency.log4j.version}</version>
        </dependency>
        <!-- Integrate log tracking to GitLab dashboard via Sentry.io -->
        <dependency>
            <groupId>io.sentry</groupId>
            <artifactId>sentry-log4j2</artifactId>
            <version>4.3.0</version>
        </dependency>

        <!-- ################ Other dependencies (usually your dependencies go to this section) ################ -->
        <!-- High performance cache (used in JDBI3, but we can reuse it for our needs) -->
        <dependency>
            <groupId>com.github.ben-manes.caffeine</groupId>
            <artifactId>caffeine</artifactId>
            <version>3.0.1</version>
        </dependency>
        <!-- Converts Java Objects into JSON and back -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.8.6</version>
        </dependency>
        <!-- A dependency of several other packages, but as we anyway need to include it, feel free to use it -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>30.1.1-jre</version>
        </dependency>
        <!-- HTML parsed. Used in crawlers, resources, removing html from strings -->
        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>1.13.1</version>
        </dependency>
        <!-- Converting video files, extracting thumbnails (only a wrapper for ffmpeg) -->
        <dependency>
            <groupId>net.bramp.ffmpeg</groupId>
            <artifactId>ffmpeg</artifactId>
            <version>0.6.2</version>
        </dependency>
        <!-- Used in ExportManager, generates HTML  -->
        <dependency>
            <groupId>com.hp.gagawa</groupId>
            <artifactId>gagawa</artifactId>
            <version>1.0.1</version>
        </dependency>
        <!-- Date formatting, e.g. '10 minutes ago' -->
        <dependency>
            <groupId>org.ocpsoft.prettytime</groupId>
            <artifactId>prettytime</artifactId>
            <version>5.0.0.Final</version>
        </dependency>
        <!-- Used to make a thumbnail of PDF in ResourcePreviewMaker -->
        <dependency>
            <groupId>org.apache.pdfbox</groupId>
            <artifactId>pdfbox</artifactId>
            <version>2.0.23</version>
        </dependency>
        <!-- RiTa WordNet (used to retrieve Definitions for TedTranscript) -->
        <!-- We are using an unofficial package from https://github.com/shibme/diction, the original repository
             is https://github.com/dhowe/RiTa, but they don't provide maven repository and don't include data to JAR -->
        <dependency>
            <groupId>me.shib.java.lib</groupId>
            <artifactId>diction</artifactId>
            <version>0.1.1</version>
        </dependency>

        <!-- ################ Test dependencies ################ -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${maven.dependency.junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${maven.dependency.junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${maven.dependency.mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>${maven.dependency.mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>1.4.200</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.name}</finalName>
        <sourceDirectory>src</sourceDirectory>
        <testSourceDirectory>test</testSourceDirectory>
        <resources>
            <resource>
                <directory>Resources</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>**/*local*.*</exclude>
                </excludes>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>testResources</directory>
                <filtering>false</filtering>
            </testResource>
        </testResources>
        <plugins>
            <!-- Specifies target Java version for builds -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <release>${maven.compiler.release}</release>
                    <compilerArgs>
                        <arg>-Xlint:all</arg>
                    </compilerArgs>
                </configuration>
            </plugin>
            <!-- Runs linter on Java sources to check code style -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>3.1.2</version>
                <configuration>
                    <configLocation>.mvn/checkstyle-config.xml</configLocation>
                    <consoleOutput>false</consoleOutput>
                    <logViolationsToConsole>true</logViolationsToConsole>
                    <failOnViolation>true</failOnViolation>
                    <includeTestSourceDirectory>true</includeTestSourceDirectory>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>8.41.1</version>
                    </dependency>
                </dependencies>
            </plugin>
            <!-- Runs static code analyser on Java sources to check for possible bugs and bad practice -->
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>4.2.3</version>
                <configuration>
                    <excludeFilterFile>.mvn/spotbugs-exclude.xml</excludeFilterFile>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>com.github.spotbugs</groupId>
                        <artifactId>spotbugs</artifactId>
                        <version>4.2.3</version>
                    </dependency>
                </dependencies>
            </plugin>
            <!-- Runs tests before build -->
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M5</version>
            </plugin>
            <!-- Specifies WebARchive configuration -->
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.3.1</version>
                <configuration>
                    <warSourceDirectory>WebContent</warSourceDirectory>
                    <webResources>
                        <resource>
                            <directory>WebContent</directory>
                            <filtering>false</filtering>
                            <excludes>
                                <include>**/web.xml</include>
                            </excludes>
                        </resource>
                        <resource>
                            <directory>WebContent</directory>
                            <filtering>true</filtering>
                            <includes>
                                <include>**/web.xml</include>
                            </includes>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>
            <!-- Builds scss styles as part of maven build process -->
            <plugin>
                <artifactId>exec-maven-plugin</artifactId>
                <groupId>org.codehaus.mojo</groupId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>npm install</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>${project.npm.install.phase}</phase>
                        <configuration>
                            <executable>npm</executable>
                            <arguments>
                                <argument>install</argument>
                                <argument>--no-audit</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>npm run build</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>${project.npm.build.phase}</phase>
                        <configuration>
                            <executable>npm</executable>
                            <arguments>
                                <argument>run</argument>
                                <argument>build</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Used to deploy application to Tomcat instance -->
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <version>2.2</version>
                <configuration>
                    <url>https://learnweb.l3s.uni-hannover.de/manager/text</url>
                    <!--suppress UnresolvedMavenProperty -->
                    <username>${env.LEARNWEB_TOMCAT_USERNAME}</username>
                    <!--suppress UnresolvedMavenProperty -->
                    <password>${env.LEARNWEB_TOMCAT_PASSWORD}</password>
                    <!--suppress UnresolvedMavenProperty -->
                    <path>/${path}##${project.version}</path>
                </configuration>
            </plugin>
            <!-- Can be used to create JAR archive and set specific class as entry point -->
            <!-- Set the required class in properties, but avoid to commit this change -->
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>${maven.assembly.mainClass}</mainClass>
                        </manifest>
                    </archive>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                </configuration>
            </plugin>
            <!-- Provides commands to check available updated for dependencies -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>2.8.1</version>
            </plugin>
            <!-- Provides commands to check dependency tree -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.1.2</version>
            </plugin>
            <!-- Provides commands to check for duplicate classes across dependencies -->
            <plugin>
                <groupId>org.basepom.maven</groupId>
                <artifactId>duplicate-finder-maven-plugin</artifactId>
                <version>1.5.0</version>
            </plugin>
            <!-- A maven component that enforces minimum Java and Maven versions -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>3.0.0-M3</version>
                <executions>
                    <execution>
                        <id>enforce-maven</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <!--<dependencyConvergence/>-->
                                <requireMavenVersion>
                                    <version>[3.6,)</version>
                                </requireMavenVersion>
                                <requireJavaVersion>
                                    <version>[11,)</version>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <!-- Used by default, aimed for local development -->
        <profile>
            <id>local</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <resources>
                    <resource>
                        <directory>Resources</directory>
                        <includes>
                            <include>**/*local*.*</include>
                        </includes>
                    </resource>
                </resources>
            </build>
        </profile>
        <!-- Used on GitLab when creating package to deploy -->
        <profile>
            <id>prod</id>
            <properties>
                <javax.faces.project_stage>Production</javax.faces.project_stage>
                <project.npm.install.phase>none</project.npm.install.phase>
            </properties>
        </profile>
    </profiles>
</project>
