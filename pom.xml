<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>de.l3s</groupId>
    <artifactId>learnweb</artifactId>
    <version>${revision}</version>
    <packaging>war</packaging>

    <name>Learnweb</name>
    <description>Learnweb is a collaborative search and sharing system.</description>

    <properties>
        <revision>3.0.0-SNAPSHOT</revision>
        <jakarta.faces.project_stage>Development</jakarta.faces.project_stage>

        <maven.compiler.release>21</maven.compiler.release>
        <maven.dependency.myfaces.version>4.1.1</maven.dependency.myfaces.version>
        <maven.dependency.imageio.version>3.12.0</maven.dependency.imageio.version>
        <maven.dependency.jdbi3.version>3.49.5</maven.dependency.jdbi3.version>
        <maven.dependency.flyway.version>11.9.1</maven.dependency.flyway.version>
        <maven.dependency.log4j.version>2.25.0</maven.dependency.log4j.version>
        <maven.dependency.sentry.version>8.13.3</maven.dependency.sentry.version>
        <maven.dependency.mockito.version>5.18.0</maven.dependency.mockito.version>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.assembly.mainClass>de.l3s.maintenance.resources.ReindexResources</maven.assembly.mainClass>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>5.13.1</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>de.l3s.interweb</groupId>
            <artifactId>interweb-client</artifactId>
            <version>4.5.3</version>
        </dependency>

        <!-- ################ Jakarta ################ -->
        <!-- Jakarta Servlet API (provided by Tomcat) -->
        <dependency>
            <groupId>jakarta.servlet</groupId>
            <artifactId>jakarta.servlet-api</artifactId>
            <version>6.1.0</version>
            <scope>provided</scope>
        </dependency>
        <!-- Jakarta EL API (provided by Tomcat) -->
        <dependency>
            <groupId>jakarta.el</groupId>
            <artifactId>jakarta.el-api</artifactId>
            <version>6.0.1</version>
            <scope>provided</scope>
        </dependency>
        <!-- Jakarta Faces API & Impl -->
        <dependency>
            <groupId>org.apache.myfaces.core</groupId>
            <artifactId>myfaces-api</artifactId>
            <version>${maven.dependency.myfaces.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.myfaces.core</groupId>
            <artifactId>myfaces-impl</artifactId>
            <version>${maven.dependency.myfaces.version}</version>
        </dependency>
        <!-- Jakarta CDI API & Impl for Servlet container (Tomcat) -->
        <dependency>
            <groupId>org.jboss.weld.servlet</groupId>
            <artifactId>weld-servlet-core</artifactId>
            <version>6.0.3.Final</version>
        </dependency>
        <!-- Jakarta Validator API & Impl -->
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>9.0.1.Final</version>
        </dependency>
        <!-- Jakarta Mail API & Impl -->
        <dependency>
            <groupId>org.eclipse.angus</groupId>
            <artifactId>angus-mail</artifactId>
            <version>2.0.3</version>
        </dependency>

        <!-- ################ Faces Libraries ################ -->
        <dependency>
            <groupId>org.omnifaces</groupId>
            <artifactId>omnifaces</artifactId>
            <version>5.0-M2</version>
        </dependency>
        <dependency>
            <groupId>org.primefaces</groupId>
            <artifactId>primefaces</artifactId>
            <version>15.0.5</version>
            <classifier>jakarta</classifier>
        </dependency>
        <!-- Optional dependency of PrimeFaces (required for DataExporter (PDF)) -->
        <dependency>
            <groupId>com.github.librepdf</groupId>
            <artifactId>openpdf</artifactId>
            <version>1.4.1</version>
        </dependency>
        <!-- Optional dependency of PrimeFaces (required for DataExporter (Excel or XML)) -->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>5.4.1</version>
        </dependency>
        <!-- poi XLSX support used for Glossary exporter -->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>5.4.1</version>
        </dependency>
        <!-- Optional dependency of PrimeFaces (required for Chart models) -->
        <dependency>
            <groupId>software.xdev</groupId>
            <artifactId>chartjs-java-model</artifactId>
            <version>2.8.1</version>
        </dependency>
        <!-- Optional dependency of PrimeFaces (required for TextEditor) -->
        <dependency>
            <groupId>com.googlecode.owasp-java-html-sanitizer</groupId>
            <artifactId>owasp-java-html-sanitizer</artifactId>
            <version>20240325.1</version>
        </dependency>

        <!-- ################ Apache commons ################ -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.17.0</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.19.0</version>
        </dependency>

        <!-- ################ ImageIO (Image processing, Thumbnails) ################ -->
        <dependency>
            <groupId>com.twelvemonkeys.servlet</groupId>
            <artifactId>servlet</artifactId>
            <version>${maven.dependency.imageio.version}</version>
            <classifier>jakarta</classifier>
        </dependency>
        <dependency>
            <groupId>com.twelvemonkeys.imageio</groupId>
            <artifactId>imageio-bmp</artifactId>
            <version>${maven.dependency.imageio.version}</version>
        </dependency>
        <dependency>
            <groupId>com.twelvemonkeys.imageio</groupId>
            <artifactId>imageio-jpeg</artifactId>
            <version>${maven.dependency.imageio.version}</version>
        </dependency>
        <dependency>
            <groupId>com.twelvemonkeys.imageio</groupId>
            <artifactId>imageio-tiff</artifactId>
            <version>${maven.dependency.imageio.version}</version>
        </dependency>
        <dependency>
            <groupId>com.twelvemonkeys.imageio</groupId>
            <artifactId>imageio-hdr</artifactId>
            <version>${maven.dependency.imageio.version}</version>
        </dependency>
        <dependency>
            <groupId>com.twelvemonkeys.imageio</groupId>
            <artifactId>imageio-webp</artifactId>
            <version>${maven.dependency.imageio.version}</version>
        </dependency>

        <!-- ################ Core dependencies ################ -->
        <!-- Database client -->
        <dependency>
            <groupId>org.mariadb.jdbc</groupId>
            <artifactId>mariadb-java-client</artifactId>
            <version>3.5.3</version>
        </dependency>
        <!-- Connection pool -->
        <dependency>
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
            <version>6.3.0</version>
        </dependency>
        <!-- JDBC wrapper -->
        <dependency>
            <groupId>org.jdbi</groupId>
            <artifactId>jdbi3-core</artifactId>
            <version>${maven.dependency.jdbi3.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jdbi</groupId>
            <artifactId>jdbi3-sqlobject</artifactId>
            <version>${maven.dependency.jdbi3.version}</version>
        </dependency>
        <!-- Database migrations -->
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
            <version>${maven.dependency.flyway.version}</version>
        </dependency>
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-mysql</artifactId>
            <version>${maven.dependency.flyway.version}</version>
        </dependency>
        <!-- Solr client (the library has 10 MB of dependencies :/) -->
        <dependency>
            <groupId>org.apache.solr</groupId>
            <artifactId>solr-solrj</artifactId>
            <version>9.8.1</version>
            <exclusions>
                <!-- We use alternative binding to Log4j-->
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>jcl-over-slf4j</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- URL rewrite -->
        <dependency>
            <groupId>org.tuckey</groupId>
            <artifactId>urlrewritefilter</artifactId>
            <version>5.1.3</version>
        </dependency>
        <!-- Cron tasks manager -->
        <dependency>
            <groupId>it.sauronsoftware.cron4j</groupId>
            <artifactId>cron4j</artifactId>
            <version>2.2.5</version>
        </dependency>
        <!-- Logging -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${maven.dependency.log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${maven.dependency.log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-jcl</artifactId>
            <version>${maven.dependency.log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <version>${maven.dependency.log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-jakarta-web</artifactId>
            <version>${maven.dependency.log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>io.sentry</groupId>
            <artifactId>sentry-log4j2</artifactId>
            <version>${maven.dependency.sentry.version}</version>
        </dependency>

        <!-- ################ Other dependencies (usually your dependencies go to this section) ################ -->
        <!-- High performance cache (used in JDBI3, but we can reuse it for our needs) -->
        <dependency>
            <groupId>com.github.ben-manes.caffeine</groupId>
            <artifactId>caffeine</artifactId>
            <version>3.2.1</version>
        </dependency>
        <!-- Converts Java Objects into JSON and back -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.13.1</version>
        </dependency>
        <!-- A dependency of several other packages, but as we anyway need to include it, feel free to use it -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>33.4.8-jre</version>
        </dependency>
        <!-- HTML parsed. Used in crawlers, resources, removing html from strings -->
        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>1.20.1</version>
        </dependency>
        <!-- Converting video files, extracting thumbnails (only a wrapper for ffmpeg) -->
        <dependency>
            <groupId>net.bramp.ffmpeg</groupId>
            <artifactId>ffmpeg</artifactId>
            <version>0.8.0</version>
        </dependency>
        <!-- Used in ExportManager, generates HTML -->
        <dependency>
            <groupId>com.hp.gagawa</groupId>
            <artifactId>gagawa</artifactId>
            <version>1.0.1</version>
        </dependency>
        <!-- Date formatting, e.g. '10 minutes ago' -->
        <dependency>
            <groupId>org.ocpsoft.prettytime</groupId>
            <artifactId>prettytime</artifactId>
            <version>5.0.9.Final</version>
        </dependency>
        <!-- Extended Java WordNet Library (used to retrieve Definitions for TedTranscript) -->
        <dependency>
            <groupId>net.sf.extjwnl</groupId>
            <artifactId>extjwnl</artifactId>
            <version>2.0.5</version>
        </dependency>
        <!-- Princeton WordNet 3.1 data dependency -->
        <dependency>
            <groupId>net.sf.extjwnl</groupId>
            <artifactId>extjwnl-data-wn31</artifactId>
            <version>1.2</version>
        </dependency>
        <!-- Markdown renderer -->
        <dependency>
            <groupId>org.commonmark</groupId>
            <artifactId>commonmark</artifactId>
            <version>0.24.0</version>
        </dependency>

        <!-- ################ Test dependencies ################ -->
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-launcher</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.weld</groupId>
            <artifactId>weld-junit5</artifactId>
            <version>5.0.1.Final</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${maven.dependency.mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>${maven.dependency.mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>2.3.232</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.name}</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>.env</exclude>
                    <exclude>release.properties</exclude>
                </excludes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>release.properties</include>
                </includes>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>false</filtering>
            </testResource>
        </testResources>
        <plugins>
            <!-- Specifies a target Java version for builds -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.14.0</version>
                <configuration>
                    <release>${maven.compiler.release}</release>
                    <compilerArgs>
                        <arg>-Xlint:all</arg>
                    </compilerArgs>
                </configuration>
            </plugin>
            <!-- Runs linter on Java sources to check code style -->
            <plugin>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>3.6.0</version>
                <configuration>
                    <configLocation>src/main/conf/checkstyle-config.xml</configLocation>
                    <consoleOutput>false</consoleOutput>
                    <logViolationsToConsole>true</logViolationsToConsole>
                    <failOnViolation>true</failOnViolation>
                    <includeTestSourceDirectory>true</includeTestSourceDirectory>
                </configuration>
            </plugin>
            <!-- Runs static code analyser on Java sources to check for possible bugs and bad practice -->
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>4.9.3.0</version>
                <configuration>
                    <excludeFilterFile>src/main/conf/spotbugs-exclude.xml</excludeFilterFile>
                </configuration>
            </plugin>
            <!-- Runs tests before build -->
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.5.3</version>
            </plugin>
            <!-- Specifies WebARchive configuration -->
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.4.0</version>
                <configuration>
                    <webResources>
                        <resource>
                            <directory>src/main/webapp</directory>
                            <filtering>false</filtering>
                            <excludes>
                                <include>WEB-INF/web.xml</include>
                            </excludes>
                        </resource>
                        <resource>
                            <directory>src/main/webapp</directory>
                            <filtering>true</filtering>
                            <includes>
                                <include>WEB-INF/web.xml</include>
                            </includes>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>
            <!-- Can be used to run the application without Tomcat server -->
            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>11.0.25</version>
                <configuration>
                    <!-- see https://www.eclipse.org/jetty/documentation/jetty-11/programming-guide/index.html#pg-configuration-6 -->
                    <webApp>
                        <contextPath>/</contextPath>
                        <jettyEnvXml>src/main/conf/jetty-env.xml</jettyEnvXml>
                    </webApp>
                    <scan>5</scan>
                </configuration>
            </plugin>
            <!-- Can be used to create JAR archive and set specific class as entry point -->
            <!-- Set the required class in properties, but avoid committing this change -->
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.7.1</version>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>${maven.assembly.mainClass}</mainClass>
                        </manifest>
                    </archive>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                </configuration>
            </plugin>
            <!-- Provides commands to check available updated for dependencies -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>2.18.0</version>
                <configuration>
                    <processUnboundPlugins>true</processUnboundPlugins>
                    <ruleSet>
                        <ignoreVersion>
                            <type>regex</type>
                            <version>(?i).*[-_\.](alpha|beta|rc|cr|m)[-_\.]?\d*</version>
                        </ignoreVersion>
                    </ruleSet>
                </configuration>
            </plugin>
            <!-- Provides commands to check a dependency tree -->
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.8.1</version>
            </plugin>
            <!-- Provides commands to check for duplicate classes across dependencies -->
            <plugin>
                <groupId>org.basepom.maven</groupId>
                <artifactId>duplicate-finder-maven-plugin</artifactId>
                <version>2.0.1</version>
            </plugin>
            <!-- A maven component that enforces minimum Java and Maven versions -->
            <plugin>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>3.5.0</version>
                <executions>
                    <execution>
                        <id>enforce-maven</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>[3.8,)</version>
                                </requireMavenVersion>
                                <requireJavaVersion>
                                    <version>[21,)</version>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <!-- Used by default, aimed for local development -->
        <profile>
            <id>local</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <resources>
                    <resource>
                        <directory>src/main/resources</directory>
                        <includes>
                            <include>.env</include>
                        </includes>
                    </resource>
                </resources>
            </build>
        </profile>
        <!-- Used when creating packages to deploy -->
        <profile>
            <id>prod</id>
            <properties>
                <jakarta.faces.project_stage>Production</jakarta.faces.project_stage>
            </properties>
        </profile>
    </profiles>
</project>
