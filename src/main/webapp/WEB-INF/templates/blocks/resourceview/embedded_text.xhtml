<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="jakarta.faces.html"
                xmlns:f="jakarta.faces.core"
                xmlns:c="jakarta.tags.core"
                xmlns:p="http://primefaces.org/ui"
                xmlns:faces="jakarta.faces"
                xmlns:ui="jakarta.faces.facelets">

<!--@elvariable id="res" type="de.l3s.learnweb.resource.Resource"-->

<h:outputStylesheet name="bundle/pickr.min.css"/>
<h:outputScript name="bundle/pickr.min.js" target="body"/>
<h:outputScript name="bundle/jquery.contextMenu.min.js" target="body"/>
<h:outputScript name="learnweb/js/lib/annotator.js" target="body"/>

<h:form styleClass="d-none">
    <p:remoteCommand name="commandSaveLog" actionListener="${resourceAnnotationBean.commandLogAnnotation(resourceDetailBean.resource)}" immediate="true" process="@this" update="@none"/>
    <p:remoteCommand name="commandSaveResource" actionListener="${resourceAnnotationBean.commandSaveAnnotation(resourceDetailBean.resource)}" immediate="true" process="@this"/>
    <p:remoteCommand name="commandGetDefinition" actionListener="${resourceAnnotationBean.commandGetDefinition()}" immediate="true" process="@this" oncomplete="annotator.saveDefinition(xhr,status,args);" async="false"/>
</h:form>

<h:form styleClass="text_res_toolbar mx-3 my-1">
    <p:commandButton styleClass="ui-button-warning" value="#{msg.convert_to_edit}"
                     actionListener="#{resourceAnnotationBean.convert()}" update="@form :text_res_content" rendered="#{empty res.transcript}"/>
    <p:tooltip for="@previous" value="#{msg.convert_to_edit_tooltip}"/>

    <p:commandButton styleClass="me-2" value="#{msg.save}" onclick="annotator.saveAnnotatedText();" rendered="#{false}"/>
    <p:tooltip for="@previous" value="#{msg.save_tooltip}" position="left"/>
</h:form>

<div faces:id="text_res_content" class="p-3 h-100">
    <ui:fragment rendered="#{empty res.transcript}">
        <iframe id="embedded_text" src="#{res.downloadUrl}" title="#{res.title}" class="bg-body-secondary"></iframe>
    </ui:fragment>

    <ui:fragment rendered="#{not empty res.transcript}">
        <div id="annotated_text" class="w-100 bg-body" style="padding: 12px;">
            <h:outputText value="#{res.transcript}" escape="false"/>
        </div>

        <p:dialog widgetVar="updateNote" header="#{msg.userAnnotation}" modal="true" dynamic="true"
                  closeOnEscape="true" resizable="false" draggable="false" closable="false">
            <h:form id="update_note_form" prependId="false">
                <div class="field">
                    <p:outputLabel for="@next" value="#{msg.justify_selection}:"/>
                    <p:inputText/>
                </div>

                <div class="d-flex flex-row-reverse">
                    <p:commandButton value="#{msg.save}" styleClass="ms-1" onclick="annotator.saveAnnotation(); return false;"/>
                    <p:commandButton styleClass="ui-button-secondary" value="#{msg.cancel}" onclick="annotator.cancelAnnotation(); return false;"/>
                </div>
            </h:form>
        </p:dialog>

        <h:outputScript target="body">
            const annotator = new Annotator('#annotated_text', {
                readOnly: false,
                lastNoteId: 0,
                editNoteFormSelector: '#update_note_form',
                noteContextMenu: [
                    { action: 'add-annotation', icon: 'fa-plus', name: '#{msg.add_annotation}' },
                    { action: 'edit-annotation', icon: 'fa-pencil-alt', name: '#{msg.edit_annotation}' },
                    { action: 'delete-annotation', icon: 'fa-minus', name: '#{msg.delete_annotation}' },
                    { action: 'add-wordnet-definition', icon: 'fa-language', name: '#{msg.add_wordnet_definition}' },
                    { action: 'delete-selection', icon: 'fa-trash', name: '#{msg.delete_selection}' },
                    { action: 'colorpicker', icon: 'fa-folder', name: '#{msg.color}' }
                ],
                annotations: [
                    #{resourceAnnotationBean.getAnnotationsAsJson()}
                ],
                locale: {
                    deleteSelection: '#{msg.delete_selection}'
                }
            });
        </h:outputScript>
    </ui:fragment>
</div>

</ui:composition>
