<ui:composition template="/WEB-INF/templates/layout/template.xhtml"
                xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
                xmlns:h="http://xmlns.jcp.org/jsf/html"
                xmlns:f="http://xmlns.jcp.org/jsf/core"
                xmlns:pt="http://xmlns.jcp.org/jsf/passthrough"
                xmlns:p="http://primefaces.org/ui">

<ui:param name="loginRequired" value="true"/>
<ui:param name="pageTitle" value="#{msg.myResourcesTitle}"/>
<ui:param name="helpText" value="#{msg.myhomeResourcesHelp}"/>
<ui:param name="rightPane" value="true"/>

<ui:define name="metadata">
    <f:metadata>
        <f:viewParam name="group_id" value="#{myResourcesBean.groupId}"/>
        <f:viewParam name="folder_id" value="#{myResourcesBean.selectedFolderId}"/>
        <f:viewParam name="save_url" value="#{myResourcesBean.urlToSave}"/>
        <f:viewParam name="resource_id" value="#{rightPaneBean.resourceId}"/>
        <f:viewAction action="#{myResourcesBean.onLoad}"/>
        <f:viewAction action="#{rightPaneBean.onLoad}"/>
    </f:metadata>
</ui:define>

<ui:define name="breadcrumb_ext">
    <p:menuitem value="#{msg.myResourcesTitle}" url="myhome/resources.jsf#"/>
</ui:define>

<ui:define name="center_layout">
    <h:form>
        <p:remoteCommand name="resourceAddedHook" update=":resourcesView"/>
        <p:remoteCommand name="resourceUpdatedHook" update=":resourcesView"/>

        <p:remoteCommand name="openFolderCommand" actionListener="#{myResourcesBean.actionOpenFolder}"
                         update=":folder_layout_options :breadcrumbs :resourcesView :right_pane :growl"
                         oncomplete="onResourcesUpdated();"/>
        <p:remoteCommand name="selectGroupItemCommand" actionListener="#{myResourcesBean.actionSelectGroupItem}"
                         update=":right_pane :growl" oncomplete="onResourcesUpdated(); "/>
        <p:remoteCommand name="updateGroupItemsCommand" actionListener="#{myResourcesBean.actionUpdateGroupItems}"
                         update=":breadcrumbs :resourcesView :right_pane :growl " oncomplete="onResourcesUpdated();"/>
        <p:remoteCommand name="editGroupItemCommand" actionListener="#{myResourcesBean.actionEditGroupItem}"
                         update=":right_pane :growl"/>
        <p:remoteCommand name="updateAddResourcePaneCommand" actionListener="#{myResourcesBean.updateTargetForAddResourceBean}"
                         update=":right_pane :growl"/>
        <p:remoteCommand name="updateThumbnailCommand" actionListener="#{resourceDetailBean.setResourceThumbnail}"
                         update=":right_pane :resourcesView :growl" oncomplete="onResourcesUpdated();"/>
    </h:form>

    <p:outputPanel styleClass="m-0 panel-content bg-white">
        <div class="p-2 bg-gray200" id="group_header">
            <div class="d-flex justify-content-between align-items-center">
                <div class="d-flex flex-row justify-content-between align-items-center">
                    <h5 class="text-primary mr-2 mb-0">My Resources</h5>
                    <h:form id="folder_layout_options" prependId="false">
                        <p:commandButton value="#{msg.list_view}" icon="fa fa-list" styleClass="secondary-btn" ariaLabel="#{msg.list_view}"
                                         update=":resourcesView @form" rendered="#{myResourcesBean.rootFolder and myResourcesBean.resourcesView == 'grid'}">
                            <f:setPropertyActionListener target="#{myResourcesBean.resourcesView}" value="list"/>
                        </p:commandButton>

                        <p:commandButton value="#{msg.grid_view}" icon="fa fa-th" styleClass="secondary-btn" ariaLabel="#{msg.grid_view}"
                                         update=":resourcesView @form" rendered="#{myResourcesBean.rootFolder and myResourcesBean.resourcesView == 'list'}">
                            <f:setPropertyActionListener target="#{myResourcesBean.resourcesView}" value="grid"/>
                        </p:commandButton>
                    </h:form>
                </div>
                <h:form id="center_header_form">
                    <p:commandButton id="add_resource_button" value="#{msg.upload_resource}" menuStyleClass="test" iconPos="right"
                                     styleClass="resource_button resourcetoolbutton" type="button"/>
                    <p:tieredMenu overlay="true" trigger="add_resource_button" my="left top" at="left bottom" style="width:200px">
                        <p:submenu label="#{msg.create}" icon="fa fa-plus-square">
                            <p:menuitem value="#{msg.office_document}" icon="fa fa-file-word-o" process="@form" styleClass="bg-primary"
                                        update=":right_pane" actionListener="#{addResourceBean.clearForm()}">
                                <f:setPropertyActionListener target="#{addResourceBean.resource.storageType}" value="1"/>
                                <f:setPropertyActionListener target="#{addResourceBean.resource.type}" value="document"/>
                                <f:setPropertyActionListener target="#{rightPaneBean.paneAction}" value="newFile"/>
                            </p:menuitem>
                            <p:menuitem value="#{msg.office_spreadsheet}" icon="fa fa-file-excel-o" styleClass="bg-primary"
                                        update=":right_pane" actionListener="#{addResourceBean.clearForm()}">
                                <f:setPropertyActionListener target="#{addResourceBean.resource.storageType}" value="1"/>
                                <f:setPropertyActionListener target="#{addResourceBean.resource.type}" value="spreadsheet"/>
                                <f:setPropertyActionListener target="#{rightPaneBean.paneAction}" value="newFile"/>
                            </p:menuitem>
                            <p:menuitem value="#{msg.office_presentation}" icon="fa fa-file-powerpoint-o" styleClass="bg-primary"
                                        update=":right_pane" actionListener="#{addResourceBean.clearForm()}">
                                <f:setPropertyActionListener target="#{addResourceBean.resource.storageType}" value="1"/>
                                <f:setPropertyActionListener target="#{addResourceBean.resource.type}" value="presentation"/>
                                <f:setPropertyActionListener target="#{rightPaneBean.paneAction}" value="newFile"/>
                            </p:menuitem>
                        </p:submenu>

                        <p:menuitem value="#{msg.upload_file}" icon="ui-icon-disk" update=":right_pane"
                                    actionListener="#{addResourceBean.clearForm()}">
                            <f:setPropertyActionListener target="#{addResourceBean.resource.storageType}" value="1"/>
                            <f:setPropertyActionListener target="#{rightPaneBean.paneAction}" value="newResource"/>
                        </p:menuitem>
                        <p:menuitem value="#{msg.upload_url}" icon="ui-icon-link" update=":right_pane"
                                    actionListener="#{addResourceBean.clearForm()}">
                            <f:setPropertyActionListener target="#{addResourceBean.resource.storageType}" value="2"/>
                            <f:setPropertyActionListener target="#{rightPaneBean.paneAction}" value="newResource"/>
                        </p:menuitem>
                        <p:menuitem value="#{msg['Glossary.add_glossary']}" icon="ui-icon-link" update=":right_pane"
                                    actionListener="#{addResourceBean.clearForm()}">
                            <f:setPropertyActionListener target="#{addResourceBean.resource.storageType}" value="1"/>
                            <f:setPropertyActionListener target="#{addResourceBean.resource.type}" value="glossary2"></f:setPropertyActionListener>
                            <f:setPropertyActionListener target="#{rightPaneBean.paneAction}" value="newResource"/>
                            <f:actionListener binding="#{addResourceBean.setResourceAsGlossary()}"/>
                        </p:menuitem>
                    </p:tieredMenu>

                </h:form>
            </div>

            <h:panelGroup id="breadcrumbs" layout="block" rendered="#{not empty myResourcesBean.breadcrumb}">
                <ul class="res-breadcrumbs">
                    <li data-folderId="0">
                        <h:link value="#{msg.myResourcesTitle}" outcome="/lw/myhome/resources.jsf"/>
                    </li>
                    <p:repeat var="folder" value="#{groupResourcesBean.breadcrumbs}">
                        <li data-folderId="#{folder.id}">
                            <h:outputLink value="#" onclick="openFolder(#{folder.id});return false;">#{folder.name}</h:outputLink>
                        </li>
                    </p:repeat>
                </ul>
            </h:panelGroup>
        </div>

        <h:panelGroup id="resourcesView" layout="block" styleClass="res-container"
                      pt:data-canAddResources="true"
                      pt:data-canSelectResources="true"
                      pt:data-canMoveResources="false">
            <h:panelGroup id="folderGrid" layout="block">

                <h:panelGroup rendered="#{myResourcesBean.resourcesView == 'grid' or !myResourcesBean.rootFolder}" styleClass="res-grid" layout="block">
                    <ui:repeat var="folder" value="#{myResourcesBean.folders}">
                        <h:panelGroup layout="block" rendered="#{myResourcesBean.rootFolder and folder.groupId == 0}">
                            <h:panelGroup styleClass="res-item" style="margin: 0.5em;" layout="block"
                                          pt:data-itemType="#{myResourcesBean.rootFolder ? 'group': 'folder'}"
                                          pt:data-itemId="#{myResourcesBean.rootFolder ? folder.groupId : folder.id}"
                                          pt:data-canViewResource="true"
                                          pt:data-canEditResource="true"
                                          pt:data-canDeleteResource="true">

                                <ui:decorate template="/WEB-INF/templates/blocks/resources/single_folder_block.xhtml">
                                    <ui:param name="folder" value="#{folder}"/>
                                </ui:decorate>

                            </h:panelGroup>
                            <hr style="margin-top:10px;width:97%"/>
                            <h5 style="margin: 0.5em;">#{msg.myhomeVirtualFolders}</h5>
                        </h:panelGroup>
                        <h:panelGroup layout="block" rendered="#{folder.groupId != 0}">
                            <h:panelGroup styleClass="res-item" layout="block"
                                          pt:data-itemType="#{myResourcesBean.rootFolder ? 'group': 'folder'}"
                                          pt:data-itemId="#{myResourcesBean.rootFolder ? folder.groupId : folder.id}"
                                          pt:data-canViewResource="true"
                                          pt:data-canEditResource="true"
                                          pt:data-canDeleteResource="true">

                                <ui:decorate template="/WEB-INF/templates/blocks/resources/single_folder_block.xhtml">
                                    <ui:param name="folder" value="#{folder}"/>
                                </ui:decorate>

                            </h:panelGroup>
                        </h:panelGroup>
                    </ui:repeat>
                </h:panelGroup>

                <h:panelGroup rendered="#{myResourcesBean.rootFolder and myResourcesBean.resourcesView == 'list'}"
                              styleClass="myresource-listview">
                    <ui:repeat var="folder" value="#{myResourcesBean.folders}">
                        <hr/>
                        <h:form>
                            <p:commandLink styleClass="resource_command_link"
                                           oncomplete="openGroup(#{folder.groupId});onResourcesUpdated();">
                                <f:setPropertyActionListener target="#{myResourcesBean.selectedFolder}" value="#{folder}"/>
                                <h:outputText value="#{folder.name}" escape="false" styleClass="resource_short_title"/>
                            </p:commandLink>
                        </h:form>
                        <br/>
                        <div>
                            <ui:repeat var="res" value="#{folder.resourcesSubset}">
                                <h:panelGroup styleClass="res-item" layout="block"
                                              pt:data-itemType="resource"
                                              pt:data-itemId="#{res.id}"
                                              pt:data-canViewResource="true"
                                              pt:data-canEditResource="true"
                                              pt:data-canDeleteResource="true"
                                              pt:data-canAnnotateResource="true">

                                    <ui:decorate template="/WEB-INF/templates/blocks/resources/single_res_block.xhtml">
                                        <ui:param name="res" value="#{res}"/>
                                    </ui:decorate>

                                </h:panelGroup>
                            </ui:repeat>
                        </div>
                        <h:form>
                            <p:commandButton styleClass="float-right" value="#{msg.show_all_my_resources_in_this_group}"
                                             oncomplete="openFolder(#{folder.id});return false;">
                                <f:setPropertyActionListener target="#{myResourcesBean.selectedFolder}" value="#{folder}"/>
                            </p:commandButton>
                            <br/>
                        </h:form>
                    </ui:repeat>
                </h:panelGroup>
            </h:panelGroup>

            <h:panelGroup id="resourceGrid" styleClass="res-grid" layout="block">
                <ui:repeat var="res" value="#{myResourcesBean.resources}">

                    <h:panelGroup styleClass="res-item" layout="block"
                                  pt:data-itemType="resource"
                                  pt:data-itemId="#{res.id}"
                                  pt:data-canViewResource="true"
                                  pt:data-canEditResource="true"
                                  pt:data-canDeleteResource="true"
                                  pt:data-canAnnotateResource="true">

                        <ui:decorate template="/WEB-INF/templates/blocks/resources/single_res_block.xhtml">
                            <ui:param name="res" value="#{res}"/>
                        </ui:decorate>
                    </h:panelGroup>
                </ui:repeat>

                <h:outputText value="#{msg.no_resources_found}" rendered="#{empty myResourcesBean.resources and !myResourcesBean.rootFolder}"
                              class="res-empty-text"/>
            </h:panelGroup>
        </h:panelGroup>
    </p:outputPanel>

    <p:dialog id="deleteConfirmDialog" header="#{msg.delete_entry}" widgetVar="deleteConfirm"
              modal="true" resizable="false" draggable="false" responsive="true" closeOnEscape="false">
        <p>
            <h:outputText value="#{msg.delete_confirm_dialog_content_folder}" styleClass="type-folder collapse"/>
            <h:outputText value="#{msg.delete_confirm_dialog_content}" styleClass="type-resource collapse"/>
            <h:outputText value="#{msg.delete_confirm_dialog_content_plural}" styleClass="type-resources collapse"/>
        </p>

        <h:panelGroup layout="block" styleClass="text-right">
            <p:button value="#{msg.cancel}" styleClass="secondary-btn" onclick="PF('deleteConfirm').hide();return false;"/>
            <p:button value="#{msg.delete}" styleClass="confirm" onclick="return false;"/>
        </h:panelGroup>
    </p:dialog>

    <p:dialog id="selectDestinationDialog" header="#{msg.selectDestination}" widgetVar="selectDestination"
              modal="true" resizable="false" draggable="false" responsive="true" closeOnEscape="false" closable="false">
        <h:panelGrid columns="2">
            <h:outputText value="#{msg.add_to}:"/>

            <h:form>
                <p:tree id="folders_tree" value="#{userBean.writeAbleGroupsTree}" var="node" animate="true" dynamic="true" selectionMode="single"
                        selection="#{myResourcesBean.selectedTargetNode}" style="max-height:28rem; overflow:auto;">
                    <p:ajax event="select" listener="#{myResourcesBean.onTargetNodeSelect}"/>

                    <p:treeNode type="group">
                        <h:outputText id="group" value="#{node.title}"/>
                    </p:treeNode>

                    <p:treeNode type="folder" expandedIcon="ui-icon-folder-open" collapsedIcon="ui-icon-folder-collapsed">
                        <h:outputText value="#{node.name}"/>
                    </p:treeNode>
                </p:tree>
            </h:form>
        </h:panelGrid>

        <h:panelGroup layout="block" styleClass="text-right">
            <p:button value="#{msg.cancel}" styleClass="secondary-btn" onclick="PF('selectDestination').hide(); return false;"/>
            <p:button value="#{msg.save}" styleClass="confirm" onclick="return false"/>
        </h:panelGroup>
    </p:dialog>

    <p:dialog id="addTagDialog" header="#{msg.addTag}" widgetVar="addTag"
              modal="true" resizable="false" draggable="false" responsive="true" closeOnEscape="false" closable="false">
        <div class="form-group">
            <p:inputText id="modal_tag_name"/>
        </div>

        <h:panelGroup layout="block" styleClass="text-right">
            <p:button value="#{msg.cancel}" styleClass="secondary-btn" onclick="PF('addTag').hide(); return false;"/>
            <p:button value="#{msg.save}" styleClass="confirm" onclick="return false"/>
        </h:panelGroup>
    </p:dialog>
</ui:define>

<ui:define name="right_layout">
    <ui:decorate template="/WEB-INF/templates/blocks/right-pane/right_pane.xhtml">
        <ui:param name="bean" value="#{myResourcesBean}"/>
    </ui:decorate>
</ui:define>

</ui:composition>
