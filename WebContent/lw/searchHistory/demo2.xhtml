<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"
	  xmlns:h="http://xmlns.jcp.org/jsf/html"
	  xmlns:f="http://xmlns.jcp.org/jsf/core"
	  xmlns:c="http://xmlns.jcp.org/jsp/jstl/core">
<h:head>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
	<link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css"/>
	<script src="//d3js.org/d3.v3.min.js" charset="utf-8"></script>
    <script src="../../resources/search-history/d3-tip.js"></script>
    <script src="../../resources/search-history/jsnetworkx.js"></script>
<title>draw graphs</title>
<style>

.d3-tip {
  line-height: 1;
  font-weight: bold;
  padding: 12px;
  background: rgba(0, 0, 0, 0.8);
  color: #fff;
  border-radius: 2px;
}

/* Creates a small triangle extender for the tooltip */
.d3-tip:after {
  box-sizing: border-box;
  display: inline;
  font-size: 10px;
  width: 100%;
  line-height: 1;
  color: rgba(0, 0, 0, 0.8);
  content: "\25BC";
  position: absolute;
  text-align: center;
}

/* Style northward tooltips differently */
.d3-tip.n:after {
  margin: -1px 0 0 0;
  top: 100%;
  left: 0;
}
</style>
</h:head>
<h:body>

	<div id="demo-canvas" class="w3-container" style="height:500px; margin:0 auto;">
		<button onclick="draw()">draw</button>
	</div>
	<div id="viz"/>
	<script type="text/javascript">
	var tip = d3.tip()
	  .attr('class', 'd3-tip')
	  .offset([-10, 0])
	  //.html("test");
	  .html(function(d) {
		var string1 = "<ul>";
		
		for(var i=0; i &lt; d.data.entities.length; i++){
			string1 += "<li>" + d.data.entities[i] + "</li>";
		}
		string1 += "</ul>";
		console.log(string1);
	    return string1;
	  });
	//d3.select("body").call(tip);
	
	function draw(){
		var G = new jsnx.DiGraph();
		var queArray = [<c:forEach items="#{getQueries.queries}" var="query">"#{query}",</c:forEach>];
		//alert(queArray);
		var enArray = [<c:forEach items="#{getEntities.entities}" var="entity">#{entity},</c:forEach>];
		var i;
		var len=queArray.length;
				
		for(i=0; i &lt; len; i++){
			//var nodeA = {toString: function(){return queArray[i]}}
			//console.log(enArray[i]);
			//console.log(JSON.parse(enArray[i].entities));
			G.addNode(queArray[i], {count:20, color: 'green', entities: enArray[i].entities});
		}
		for(i=0; i &lt; len-1; i++){
			G.addEdge(queArray[i], queArray[i+1]);
		}
	
		jsnx.draw(G,{
			element: "#demo-canvas",
			layoutAttr:{
				charge:-200,
				linkDistance:150
			},
			withLabels: true,
			nodeAttr:{
				r: function(d){
					return d.data.count;
				}
			},
			nodeStyle:{
				fill:function(d){
					return d.data.color;
				},
				stroke: 'none'
			},
			labelStyle:{
				fill: 'black'
			},
			stickyDrag: true
		});
		
		d3.select('svg').call(tip);
		d3.selectAll('.node').on('mouseover',tip.show);
		d3.selectAll('.node').on('mouseout', tip.hide);
		
	}
	
	//mouseover:function(){
		//return tooltip.style("visibility", "visible");
	//},
	//mousemove:function(){
		//return tooltip.style("top", (event.pageY-10)+"px").style("left",(event.pageX+10)+"px");
	//},
	//mouseout:function(){
		//return tooltip.style("visibility", "hidden");
	//}
		//define the div for the tooltip
		//var tooltip = d3.select("body")
			//.append("div")
			//.style("position","absolute")
			//.style("z-index","10")
			//.style("visibility","hidden")
			//.text("related entities")
	</script>
</h:body>
</html>