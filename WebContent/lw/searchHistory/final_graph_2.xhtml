<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
	  xmlns:h="http://java.sun.com/jsf/html" 
	  xmlns:f="http://java.sun.com/jsf/core"
	  xmlns:c="http://java.sun.com/jsp/jstl/core">
<h:head>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
	<link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css"/>
	<script src="//d3js.org/d3.v3.min.js" charset="utf-8"></script>
    <script src="../../resources/search-history/d3-tip.js"></script>
    <script src="../../resources/search-history/jsnetworkx.js"></script>
<title>final graph 2</title>
</h:head>
<h:body>
	<div id="canvas" class="w3-container" style="height:500px; margin:0 auto;">
		<button onclick="draw()">knowledge graph</button>
	</div>
	<script>
	function draw(){
			var G = new jsnx.Graph();
			var queArray = [<c:forEach items="#{getQueries.queries}" var="query">"#{query}",</c:forEach>];
			//alert(queArray);
			var enArray = [<c:forEach items="#{getEntities.entities}" var="entity">#{entity},</c:forEach>];
			var allEnArray = [<c:forEach items="#{getFinalgraph.finalgraph}" var="entity">"#{entity}",</c:forEach>];
			var i, j;
			var len=queArray.length;
			var lenE=allEnArray.length;
			
			
			//addnode
			for(i=0; i &lt; len; i++){
				var entities=enArray[i].entities;
				var lene=entities.length;
				
				G.addNode(queArray[i], {count:20, color: '#489a83', size: 14});
				for(j=0; j&lt; lene; j++){
					G.addNode(entities[j],{count:10, color: '#d0e8e5', size: 8})
					G.addEdge(queArray[i], entities[j], {color: '#489a83', distance:30});
				}
			}
			
			//addEdge
			for(i=0; i &lt; len-1; i++){
				G.addEdge(queArray[i], queArray[i+1], {color: "black", distance: 150});
			}
		
			jsnx.draw(G,{
				element: "#canvas",
				layoutAttr:{
					charge:-200,
					linkDistance:function(d){
						return d.data.distance;
					}
				},
				withLabels: true,
				nodeAttr:{
					r: function(d){
						return d.data.count;
					}
				},
				nodeStyle:{
					fill:function(d){
						return d.data.color;
					},
					stroke: 'none'
				},
				labelStyle:{
					fill: 'black',
					'font-size': function(d){
						return d.data.size;
					}
				},
				edgeStyle: {
					fill:function(d){
						return d.data.color;
					}
				},
				stickyDrag: true
			});
		}
	</script>
</h:body>
</html>