<ui:composition template="/templates/main/main.xhtml" 
	xmlns:ui="http://java.sun.com/jsf/facelets" 
	xmlns:h="http://java.sun.com/jsf/html" 
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:p="http://primefaces.org/ui"
	xmlns:c="http://java.sun.com/jsp/jstl/core"
	lang="#{userBean.localeCode}">

	<ui:define name="metadata">
		<f:metadata>
			<f:event type="preRenderView" listener="#{newSearchHistoryBean.preRenderView}" />
		</f:metadata>
	</ui:define>

	<ui:param name="pageTitle" value="Search History" />
	
	<ui:define name="center_layout">
		<h4>#{newSearchHistoryBean.title}</h4>
		<!-- Include your demo2.xhtml code inside this tag -->
		<!-- <link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css"/> -->
		<link rel="stylesheet" type="text/css" href="#{request.contextPath}/resources/search-history/queryPath.css" />
		<script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
	    <script type="text/javascript" src="#{request.contextPath}/resources/search-history/jsnetworkx.js"></script>
	    <script type="text/javascript" src="#{request.contextPath}/resources/search-history/d3-tip.js"></script>
	    
	    <div id="demo-canvas" class="w3-container" style="height:500px; margin:0 auto;">
		<button onclick="draw()">draw</button>
		</div>
		<div id="viz"/>
		<script type="text/javascript">
			var tip = d3.tip()
			  .attr('class', 'd3-tip')
			  .offset([-10, 0])
			  //.html("test");
			  .html(function(d) {
				var string1 = "<ul>";
				
				for(var i=0; i &lt; d.data.entities.length; i++){
					string1 += "<li>" + d.data.entities[i] + "</li>";
				}
				string1 += "</ul>";
				console.log(string1);
			    return string1;
			  });
			//d3.select("body").call(tip);
			
			function draw(){
				var G = new jsnx.DiGraph();
				var queArray = [<c:forEach items="#{getElements.queries}" var="query">"#{query}",</c:forEach>];
				//alert(related entities);
				var related = [<c:forEach items="#{getElements.related}" var="entity">#{entity},</c:forEach>];
				var i;
				var len=queArray.length;
				//addnode		
				for(i=0; i &lt; len; i++){
					//var nodeA = {toString: function(){return queArray[i]}}
					//console.log(enArray[i]);
					//console.log(JSON.parse(enArray[i].entities));
					G.addNode(queArray[i], {count:20, color: '#489a83', entities: related[i]});
				}
				//addedge
				for(i=0; i &lt; len-1; i++){
					G.addEdge(queArray[i], queArray[i+1]);
				}
			
				jsnx.draw(G,{
					element: "#demo-canvas",
					layoutAttr:{
						charge:-200,
						linkDistance:150
					},
					withLabels: true,
					nodeAttr:{
						r: function(d){
							return d.data.count;
						}
					},
					nodeStyle:{
						fill:function(d){
							return d.data.color;
						},
						stroke: 'none'
					},
					labelStyle:{
						fill: 'black'
					},
					stickyDrag: true
				});
				
				d3.select('svg').call(tip);
				d3.selectAll('.node').on('dblclick',tip.show);
				d3.selectAll('.node').on('mouseout', tip.hide);
				
			}
			
			//mouseover:function(){
				//return tooltip.style("visibility", "visible");
			//},
			//mousemove:function(){
				//return tooltip.style("top", (event.pageY-10)+"px").style("left",(event.pageX+10)+"px");
			//},
			//mouseout:function(){
				//return tooltip.style("visibility", "hidden");
			//}
				//define the div for the tooltip
				//var tooltip = d3.select("body")
					//.append("div")
					//.style("position","absolute")
					//.style("z-index","10")
					//.style("visibility","hidden")
					//.text("related entities")
			</script>
	</ui:define>
	
</ui:composition>