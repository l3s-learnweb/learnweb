.profile-picture {
  $pictureMinSize: 2.8125rem;
  $pictureMaxSize: 6.25rem;

  min-width: $pictureMinSize;
  min-height: $pictureMinSize;
  max-width: $pictureMaxSize;
  max-height: $pictureMaxSize;
  background: $themeElementTextColor;
  border: 1px solid $themePrimaryColor;

  &:not(.square) {
    border-radius: 50%;
  }

  &:not(.fluent) {
    width: $pictureMinSize;
    height: $pictureMinSize;
  }
}

.has-badge {
  position: relative;

  &::after {
    position: absolute;
    right: 0;
    top: 0;
    content: attr(data-count);
    font-size: 0.7rem;
    padding: 0.5em;
    border-radius: 50%;
    line-height: 0.75em;
    color: $themeElementTextColor;
    background: rgba($red, 0.85);
    text-align: center;
    min-width: 1.75em;
    font-weight: bold;
  }

  &.ui-draggable-helper::after {
    background: $red;
    right: -0.5rem;
    top: -0.5rem;
    font-size: 0.875rem;
  }
}

.text-truncate-multiline {
  @include text-truncate();

  // if this feature is supported, it would show two lines, if not, just single line
  @supports (display: -webkit-box) {
    white-space: initial;
    display: -webkit-box; /* stylelint-disable-line */
    -webkit-line-clamp: 2; /* stylelint-disable-line */
    -webkit-box-orient: vertical; /* stylelint-disable-line */
  }
}

.select-none {
  @include user-select(none);
}

.line-height-sm {
  line-height: 1.25;
}

.modal-dialog-select {
  max-width: 365px;
  width: 100% !important;

  .ui-selectonemenu-label {
    max-width: 254px;
  }
}

@keyframes highlight {
  50% {
    transform: scale(1.025);
  }
}

section:target .highlight {
  @include media-breakpoint-up(md) {
    animation: highlight 1s ease;
  }
}

iframe,
embed,
object,
video {
  width: 100%;
  height: 100%;
  border: 0;
}

blockquote {
  border-left: 4px solid $gray-500;
  margin-bottom: 5px;
  margin-top: 5px;
  padding-left: 16px;
}

.message-container {
  p {
    margin-bottom: 0;
  }
}

.forum-message-container {
  p {
    margin-bottom: 0;
    margin-top: 0.5rem;
  }
}

.white-space-normal {
  white-space: normal !important;
}

blockquote {
  margin-top: 0 !important;
  margin-bottom: 0 !important;
}

.links-list {
  flex-wrap: wrap;
  display: flex;

  a {
    white-space: nowrap;
    width: 18rem;
    padding: 1rem;
    font-size: 1.15rem;
    text-decoration: none;
    margin: 0.5rem 1rem;
    border-bottom: 1px solid rgba(0, 0, 0, 0);
    transition: 0.35s;
    background: rgba(253, 253, 253, 0.6);
    display: inline-block;
    vertical-align: middle;

    &:hover {
      background: rgba(247, 247, 247, 0.7);

      i {
        font-size: larger;
      }
    }

    i {
      transition: 0.15s;
      margin-right: 0.5rem;
    }
  }
}

.first-letter-capitalize {
  &::first-letter {
    text-transform: capitalize;
  }
}

// Utilities for common `display` values. Similar to existing .d-#{} utils, but using max-width (down) instead of min-width
// For example, instead of .d-none.d-md-block, you can use .dd-sm-none class.
@each $breakpoint in map-keys($grid-breakpoints) {
  $max: breakpoint-max($breakpoint, $grid-breakpoints);

  @if ($max) {
    @media (max-width: $max) {
      @each $value in $displays {
        .dd-#{$breakpoint}-#{$value} { display: $value !important; }
      }
    }
  }
}
